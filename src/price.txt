<div className="relative">
              {/* Filter Button
              <button
                onClick={toggleDropdown}
                className="flex items-center justify-between w-full"
              >
                <span className="text-gray-700 font-semibold">Price</span>
                {isOpen ? <ChevronUp size={20} /> : <ChevronDown size={20} />}
              </button>

              {/* Dropdown */}
              <div
                className={`w-full mt-3 transform transition-all duration-300 ease-in-out ${
                  isOpen ? "translate-y-0 visible" : "-translate-y-5 invisible"
                }`}
              >
                {/* Price Range Selector */}
                <div className="mx-auto">
                  <Range
                    step={10}
                    min={0}
                    max={2000}
                    values={values}
                    onChange={(values) => setValues(values)}
                    renderTrack={({ props, children }) => {
                      const [min, max] = values;
                      const leftPercentage = ((min - 0) / (2000 - 0)) * 100;
                      const rightPercentage = ((max - 0) / (2000 - 0)) * 100;

                      return (
                        <div
                          {...props}
                          className="relative h-1 w-full bg-gray-300 rounded-md"
                        >
                          {/* Black range bar between min and max */}
                          <div
                            className="absolute h-1 bg-black rounded-md"
                            style={{
                              left: `${leftPercentage}%`,
                              width: `${rightPercentage - leftPercentage}%`,
                            }}
                          ></div>
                          {children}
                        </div>
                      );
                    }}
                    renderThumb={({ props, index }) => (
                      <div {...props} className="relative">
                        {/* Thumb (Circle) */}
                        <div className="w-5 h-5 bg-black rounded-full flex items-center justify-center text-white"></div>

                        {/* Dynamic Price Label */}
                        <span className="absolute -bottom-8 left-1/2 transform -translate-x-1/2 bg-white text-black px-2 py-1 text-sm font-medium rounded shadow">
                          ${values[index]}
                        </span>
                      </div>
                    )}
                  />
                </div>
              </div>
            </div>